use napi_sys::*;

pub(crate) fn napi_symbols() -> &'static [*const extern "C" fn()] {
    &[
        // napi 1
        napi_get_last_error_info as _,
        napi_get_undefined as _,
        napi_get_null as _,
        napi_get_global as _,
        napi_get_boolean as _,
        napi_create_object as _,
        napi_create_array as _,
        napi_create_array_with_length as _,
        napi_create_double as _,
        napi_create_int32 as _,
        napi_create_uint32 as _,
        napi_create_int64 as _,
        napi_create_string_latin1 as _,
        napi_create_string_utf8 as _,
        napi_create_string_utf16 as _,
        napi_create_symbol as _,
        napi_create_function as _,
        napi_create_error as _,
        napi_create_type_error as _,
        napi_create_range_error as _,
        napi_typeof as _,
        napi_get_value_double as _,
        napi_get_value_int32 as _,
        napi_get_value_uint32 as _,
        napi_get_value_int64 as _,
        napi_get_value_bool as _,
        napi_get_value_string_latin1 as _,
        napi_get_value_string_utf8 as _,
        napi_get_value_string_utf16 as _,
        napi_coerce_to_bool as _,
        napi_coerce_to_number as _,
        napi_coerce_to_object as _,
        napi_coerce_to_string as _,
        napi_get_prototype as _,
        napi_get_property_names as _,
        napi_set_property as _,
        napi_has_property as _,
        napi_get_property as _,
        napi_delete_property as _,
        napi_has_own_property as _,
        napi_set_named_property as _,
        napi_has_named_property as _,
        napi_get_named_property as _,
        napi_set_element as _,
        napi_has_element as _,
        napi_get_element as _,
        napi_delete_element as _,
        napi_define_properties as _,
        napi_is_array as _,
        napi_get_array_length as _,
        napi_strict_equals as _,
        napi_call_function as _,
        napi_new_instance as _,
        napi_instanceof as _,
        napi_get_cb_info as _,
        napi_get_new_target as _,
        napi_define_class as _,
        napi_wrap as _,
        napi_unwrap as _,
        napi_remove_wrap as _,
        napi_create_external as _,
        napi_get_value_external as _,
        napi_create_reference as _,
        napi_delete_reference as _,
        napi_reference_ref as _,
        napi_reference_unref as _,
        napi_get_reference_value as _,
        napi_open_handle_scope as _,
        napi_close_handle_scope as _,
        napi_open_escapable_handle_scope as _,
        napi_close_escapable_handle_scope as _,
        napi_escape_handle as _,
        napi_throw as _,
        napi_throw_error as _,
        napi_throw_type_error as _,
        napi_throw_range_error as _,
        napi_is_error as _,
        napi_is_exception_pending as _,
        napi_get_and_clear_last_exception as _,
        napi_is_arraybuffer as _,
        napi_create_arraybuffer as _,
        napi_create_external_arraybuffer as _,
        napi_get_arraybuffer_info as _,
        napi_is_typedarray as _,
        napi_create_typedarray as _,
        napi_get_typedarray_info as _,
        napi_create_dataview as _,
        napi_is_dataview as _,
        napi_get_dataview_info as _,
        napi_get_version as _,
        napi_create_promise as _,
        napi_resolve_deferred as _,
        napi_reject_deferred as _,
        napi_is_promise as _,
        napi_run_script as _,
        napi_adjust_external_memory as _,
        napi_module_register as _,
        napi_fatal_error as _,
        napi_async_init as _,
        napi_async_destroy as _,
        napi_make_callback as _,
        napi_create_buffer as _,
        napi_create_external_buffer as _,
        napi_create_buffer_copy as _,
        napi_is_buffer as _,
        napi_get_buffer_info as _,
        napi_create_async_work as _,
        napi_delete_async_work as _,
        napi_queue_async_work as _,
        napi_cancel_async_work as _,
        napi_get_node_version as _,
        // napi 2
        napi_get_uv_event_loop as _,
        // napi 3
        napi_fatal_exception as _,
        napi_add_env_cleanup_hook as _,
        napi_remove_env_cleanup_hook as _,
        napi_open_callback_scope as _,
        napi_close_callback_scope as _,
        // napi 4
        napi_create_threadsafe_function as _,
        napi_get_threadsafe_function_context as _,
        napi_call_threadsafe_function as _,
        napi_acquire_threadsafe_function as _,
        napi_release_threadsafe_function as _,
        napi_unref_threadsafe_function as _,
        napi_ref_threadsafe_function as _,
        // napi 5
        napi_create_date as _,
        napi_is_date as _,
        napi_get_date_value as _,
        napi_add_finalizer as _,
        // napi 6
        napi_create_bigint_int64 as _,
        napi_create_bigint_uint64 as _,
        napi_create_bigint_words as _,
        napi_get_value_bigint_int64 as _,
        napi_get_value_bigint_uint64 as _,
        napi_get_value_bigint_words as _,
        napi_get_all_property_names as _,
        napi_set_instance_data as _,
        napi_get_instance_data as _,
        // napi 7
        napi_detach_arraybuffer as _,
        napi_is_detached_arraybuffer as _,
    ]
}
